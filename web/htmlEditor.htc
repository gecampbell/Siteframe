<public:component tagName=htmlEditor>
	<public:defaults viewLinkContent/>
	<public:attach event="oncontentready" onevent="fnInit();"/>
	<public:property name="path" id="path" internalname="path"/>
	<public:property name="imagesPath" id="imagesPath" put="receiveImagesPath" get="sendImagesPath"/>
	<public:property name="content"	id="content" put="receiveContent" get="sendContent"/>
	<public:property name="showSave" id="showSave" put="receiveShowSave" get="sendShowSave"/>
	<public:property name="replaceTags" id="replaceTags" put="receiveReplaceTags" get="sendReplaceTags"/>
	<public:property name="stylesheet" id="styleSheet" internalname="styleSheet"/>
	<public:event name="onSave" ID="editorSave" />
</public:component>

<html>
<head>
<style>
BODY {
	margin : 0, 0, 0, 0;
}

.editFrame {
	border : 1px outset;
	padding : 5, 5, 5, 5;
	background-color : Silver;
	height : 480px;
	width : 100%;
}

.editDoc {
	border : 1px groove Gray;
	padding : 2, 2, 2, 2;
	height : 440px;
	width : 100%;
	overflow : auto;
	background-color : White;
	margin-top : 3px;
}

.toolbar {
	width : 100%;
	height : 22px;
}

.toolbarSeperator {
	border-left-style : ridge;
	border-left-width : 4px;
	position: relative;
	width : 6px;
	height : 16px;
}

.toolbarButton {
	position : relative;
	top : 3px;
	border: 2px solid Silver;
}

.toolbarSelect SELECT {
	position : relative;
	font-size : 10px;
	height : 16px;
	
}
</style>
</head>

<SCRIPT TYPE="text/javascript" FOR="document" EVENT="onselectionchange" language="JavaScript">
		// If color picker is visible, hide it.
		if(colorPalette.style.display=="")
			colorPalette.style.display="none";
			
		// Check for bold
		buttonBold.state = queryCommandState('Bold');
		buttonMouseLeave('buttonBold');

		// Check for Italic
		buttonItalic.state = queryCommandState('Italic');
		buttonMouseLeave('buttonItalic');

		// Check for Underline
		buttonUnderline.state = queryCommandState('Underline');
		buttonMouseLeave('buttonUnderline');
	
		// Check for JustifyLeft
		buttonLeft.state = queryCommandState('JustifyLeft');
		buttonMouseLeave('buttonLeft');

		// Check for JustifyCenter
		buttonCenter.state = queryCommandState('JustifyCenter');
		buttonMouseLeave('buttonCenter');

		// Check for JustifyRight
		buttonRight.state = queryCommandState('JustifyRight');
		buttonMouseLeave('buttonRight');

		// Check FontSize
		selectFontSize.selectedIndex = queryCommandValue('FontSize') - 1
		
		// Check FontName
		var curFont = queryCommandValue('FontName');
		for(x=0; x<selectFontName.length; x++) {
			if(curFont==selectFontName.options[x].text)
				selectFontName.selectedIndex = x;
		}
</SCRIPT>

<SCRIPT TYPE="text/javascript" FOR="palette" EVENT="onscriptletevent(name, eventData)" LANGUAGE="JavaScript">
	if(name=='colorchange') {
		buttonClick('buttonColorPicker');
		buttonColorPicker.state = false;
		setForeColor(eventData);
	}
</script>

<SCRIPT LANGUAGE="JavaScript" TYPE="text/javascript">
<!--
	var content="";
	var path="";
	var styleSheet="";
	var imagesPath="";
	var imagesSubPath="";
	var displayMode="RICH";
	var replaceTags = new Array();
	
	var buttonImages = new Array();
	buttonImages[0]  = "Images/icon_colorpicker.gif";
	buttonImages[1]  = "Images/icon_bold.gif";
	buttonImages[2]  = "Images/icon_italicize.gif";
	buttonImages[3]  = "Images/icon_underline.gif";
	buttonImages[5]  = "Images/icon_olist.gif";
	buttonImages[4]  = "Images/icon_ulist.gif";
	buttonImages[6]  = "Images/icon_outdent.gif";
	buttonImages[7]  = "Images/icon_indent.gif";
	buttonImages[8]  = "Images/icon_left.gif";
	buttonImages[9]  = "Images/icon_center.gif";
	buttonImages[10] = "Images/icon_right.gif";
	buttonImages[11] = "Images/icon_justify.gif";
	buttonImages[12] = "Images/icon_link.gif";
	buttonImages[13] = "Images/icon_image.gif";
	buttonImages[14] = "Images/icon_table.gif";
	buttonImages[15] = "Images/icon_cut.gif";
	buttonImages[16] = "Images/icon_copy.gif";
	buttonImages[17] = "Images/icon_paste.gif";
	buttonImages[18] = "Images/icon_undo.gif";
	buttonImages[19] = "Images/icon_redo.gif";
	buttonImages[20] = "Images/icon_rem_formatting.gif";
	buttonImages[21] = "Images/icon_mode.gif";
	buttonImages[22] = "Images/icon_save.gif";
	
	function fnInit(){
	    theDoc.unselectable = "off";
		for(i=0; i<document.images.length; i++)
			if(document.images(i).parentNode.id.substr(0,6)=='button')
				document.images(i).src = path + buttonImages[i];
		
		//document.createStyleSheet(styleSheet);
	}

	function receiveContent(vValue) {
		theDoc.innerHTML = vValue;
		for(i=0; i<document.images.length; i++) {
			if(document.images(i).parentNode.id.substr(0,6)!='button') {
				var newSrc = document.images(i).src.substr(document.images(i).src.lastIndexOf(imagesSubPath) + imagesSubPath.length);
				document.images(i).src = imagesPath + newSrc;
			}
		}
		editorContent.fireChange();
	}
	
	function sendContent() {
		var finalContent;

		// fix img links
		for(i=0; i<document.images.length; i++) {
			if(document.images(i).parentNode.id.substr(0,6)!='button') {
				if(imagesSubPath.length>0) {
					var newSrc = document.images(i).src.substr(document.images(i).src.lastIndexOf(imagesSubPath));
					document.images(i).src = newSrc;
				}
			}
		}
		
		// run replacements
		finalContent = theDoc.innerHTML;
		for(i=0; i<replaceTags.length; i=+2) {
			finalContent = replaceTag(finalContent, replaceTags[i], replaceTags[i+1]);
		}
		return finalContent;
	}
	
	function receiveImagesPath(vValue) {
		imagesPath = vValue;
		imagesSubPath = imagesPath.substr(imagesPath.lastIndexOf("/"));
	}
	
	function sendImagesPath() {
		return imagesPath;
	}
	
	function receiveShowSave(vValue) {
		if(vValue == true) {
			buttonSave.style.display="";
		} else {
			buttonSave.style.display="none";
		}
	}
	
	function receiveReplaceTags(vValue) {
		replaceTags = vValue.split(',');
	}
	
	function sendReplaceTags() {
		return replaceTags.join(',');
	}
	
	function buttonMouseEnter(button) {
		if(document.all(button).state) {
			document.all(button).style.border = "2 inset Silver";
			document.all(button).style.backgroundColor = "";
		} else {
			document.all(button).style.border = "2 outset Silver";
			document.all(button).style.backgroundColor = "";
		}
	}
	
	function buttonMouseLeave(button) {
		if(document.all(button).state) {
			document.all(button).style.border = "2 inset Silver";
			document.all(button).style.backgroundColor = "gainsboro";
		} else {
			document.all(button).style.border = "2 solid Silver";
			document.all(button).style.backgroundColor = "";
		}
	}
	
	function buttonMouseDown(button) {
		document.all(button).style.backgroundColor = "#cfcfcf";
		document.all(button).style.border = "2 inset";
	}
	
	function buttonMouseUp(button) {
		if(document.all(button).state) {
			document.all(button).style.border = "";
		}
	}
	
	function buttonClick(button) {
		var command = document.all(button).command;
		if(command.substr(0,6)=='Insert') {
			// An Insert button was clicked. Set buttonList to the button *not* clicked.
			if(command.substr(6,9)=='Unordered') {
				var buttonList = document.all('buttonOrderedList');
			} else {
				var buttonList = document.all('buttonUnorderedList');
			}
			if(buttonList.state) {
				// The button not clicked is true, so we need to turn it off.
				buttonList.state = false;
				buttonMouseLeave(buttonList.id);
			}
		} else if(command.substr(0,7)=='Justify') {
			if(command=='JustifyFull') {
				var sel = document.selection.createRange();
				var el = sel.parentElement();
				el.style.textAlign = 'justify';
				el.style.textJustify = 'distribute-all-lines';
			} else {
			
			if(document.all(button).state) {
				buttonMouseLeave(button);
				theDoc.focus();
				return;
			} else {
				document.all('buttonLeft').state = false;
				buttonMouseLeave('buttonLeft');
				document.all('buttonCenter').state = false;
				buttonMouseLeave('buttonCenter');
				document.all('buttonRight').state = false;
				buttonMouseLeave('buttonRight');
			}
			
			}
		} else if(command.substr(0,6)=='Dialog') {
			if(command=='DialogLink') {
				document.execCommand('CreateLink','true');
			} else if (command=='DialogImage') {
				document.execCommand('InsertImage','true');
				return;
			} else if (command=='DialogColor') {
				document.all('colorPalette').style.display = (document.all('colorPalette').style.display=="")?"none":"";
				return;
			} else if (command=='DialogTable') {
				html = showModalDialog("dlg_ins_table.html", null, "status:no;dialogWidth:300px;dialogHeight:300px;help:no")
				if (html) {
					theDoc.focus();
					var sel = document.selection.createRange();
					sel.pasteHTML(html);
				}
			}
		} else if(command.substr(0,4)=='Mode') {
			var mode = '';
			if(displayMode=='RICH'){
				document.all('buttonMode').state = false;
				document.all('imageMode').alt = 'Rich Mode';
				mode = 'CODE';
			} else {
				document.all('buttonMode').state = true;
				document.all('imageMode').alt = 'Source Mode';
				mode = 'RICH';
			}
			setDisplayMode(mode);
			buttonMouseLeave('buttonMode');
		} else if(command=='Save') {
			var oEvent = createEventObject();
			editorSave.fire(oEvent);
		} else if(command=='RemoveFormat') {
			var sel = document.selection.createRange();
			var el = sel.parentElement();
			el.style.textAlign = '';
			el.style.textJustify = '';					
		}
		document.execCommand(command);
		document.all(button).state = !document.all(button).state;
		buttonMouseEnter(button);
		theDoc.focus();
	}
	
	function setForeColor(vColor) {
		document.execCommand('ForeColor',false,vColor);
		theDoc.focus();
	}
	
	function setDisplayMode(mode) {
		if(mode=='CODE') {
			theDoc.clearAttributes;
			theDoc.style.fontFamily = 'Times New Roman';
			theDoc.style.fontSize = '';
			theDoc.innerText = theDoc.innerHTML;
			displayMode = 'CODE';
		} else {
			theDoc.clearAttributes;
			theDoc.style.fontFamily = '';
			theDoc.style.fontSize = '';
			theDoc.innerHTML = theDoc.innerText;
			displayMode = 'RICH';
		}
	}
	
	function replaceTag(source, oldTag, newTag) {
		var expression, result;
		var oldTagB = oldTag.substr(1, oldTag.length - 2);
		expression = "<(" + oldTagB + ")>(.*?)<\/" + oldTagB + ">";
		expression = new RegExp(expression, "igm");
		result = source.replace(expression, newTag + "$2</" + newTag.substr(1));
		return(result);
	}
//-->
</SCRIPT>

<body>
<div unselectable="on" class="toolbarButton" id="colorPalette" style="position: absolute; left: 155px; top: 25px; display: none; zindex: 1;">
	<object id="palette" type="text/x-scriptlet" data="colorPicker.html"></object>
</div>
<div unselectable="on" class="editFrame" id="editFrame" align="center">
	<div unselectable="on" id="toolbar" class="toolbar" align="left">
		<nobr>
		<span unselectable="on" class="toolbarSelect">
			<select id="selectFontName" onChange="document.execCommand('FontName', false, document.all.item('selectFontName').options[document.all.item('selectFontName').selectedIndex].text);">
				<option>Arial
				<option>Georgia
				<option selected>Times New Roman
				<option>Verdana
			</select>
		</span>
		<span unselectable="on" class="toolbarSelect">
			<select id="selectFontSize" style="left: -5px;" onChange="document.execCommand('FontSize', false, document.all.item('selectFontSize').selectedIndex + 1);">
				<option>1
				<option>2
				<option selected>3
				<option>4
				<option>5
				<option>6
				<option>7
			</select>
		</span>
		<span unselectable="on" class="toolbarButton" id="buttonColorPicker" command="DialogColor" style="left: -6px;" onClick="buttonClick('buttonColorPicker');this.state=false;" onMouseEnter="buttonMouseEnter('buttonColorPicker');" onMouseLeave="buttonMouseLeave('buttonColorPicker');" onMouseDown="buttonMouseDown('buttonColorPicker');" onMouseUp="buttonMouseUp('buttonColorPicker');"><img src="icon_colorpicker.gif" width="16" height="16" border="0" alt="Choose Color"></span>
		<span unselectable="on" class="toolbarSeperator" style="left: -7px;"></span>
		<span unselectable="on" class="toolbarButton" id="buttonBold" command="Bold" style="left: -7px;" onClick="buttonClick('buttonBold');" onMouseEnter="buttonMouseEnter('buttonBold');" onMouseLeave="buttonMouseLeave('buttonBold');" onMouseDown="buttonMouseDown('buttonBold');" onMouseUp="buttonMouseUp('buttonBold');"><img src="icon_bold.gif" width="16" height="16" border="0" alt="Bold"></span>
		<span unselectable="on" class="toolbarButton" id="buttonItalic" command="Italic" style="left: -12px;" onClick="buttonClick('buttonItalic');" onMouseEnter="buttonMouseEnter('buttonItalic');" onMouseLeave="buttonMouseLeave('buttonItalic');" onMouseDown="buttonMouseDown('buttonItalic');" onMouseUp="buttonMouseUp('buttonItalic');"><img src="icon_italicize.gif" width="16" height="16" border="0" alt="Italic"></span>
		<span unselectable="on" class="toolbarButton" id="buttonUnderline" command="Underline" style="left: -17px;" onClick="buttonClick('buttonUnderline');" onMouseEnter="buttonMouseEnter('buttonUnderline');" onMouseLeave="buttonMouseLeave('buttonUnderline');" onMouseDown="buttonMouseDown('buttonUnderline');" onMouseUp="buttonMouseUp('buttonUnderline');"><img src="icon_underline.gif" width="16" height="16" border="0" alt="Underline"></span>
		<span unselectable="on" class="toolbarSeperator" style="left: -19px;"></span>
		<span unselectable="on" class="toolbarButton" id="buttonOrderedList" command="InsertOrderedList" style="left: -19px;" onClick="buttonClick('buttonOrderedList');" onMouseEnter="buttonMouseEnter('buttonOrderedList');" onMouseLeave="buttonMouseLeave('buttonOrderedList');" onMouseDown="buttonMouseDown('buttonOrderedList');" onMouseUp="buttonMouseUp('buttonOrderedList');"><img src="icon_olist.gif" width="16" height="16" border="0" alt="Ordered List"></span>		
		<span unselectable="on" class="toolbarButton" id="buttonUnorderedList" command="InsertUnorderedList" style="left: -24px;" onClick="buttonClick('buttonUnorderedList');" onMouseEnter="buttonMouseEnter('buttonUnorderedList');" onMouseLeave="buttonMouseLeave('buttonUnorderedList');" onMouseDown="buttonMouseDown('buttonUnorderedList');" onMouseUp="buttonMouseUp('buttonUnorderedList');"><img src="icon_ulist.gif" width="16" height="16" border="0" alt="UnUnordered List"></span>
		<span unselectable="on" class="toolbarButton" id="buttonOutdent" command="Outdent" style="left: -29px;" onClick="buttonClick('buttonOutdent');this.state=false;" onMouseEnter="buttonMouseEnter('buttonOutdent');" onMouseLeave="buttonMouseLeave('buttonOutdent');" onMouseDown="buttonMouseDown('buttonOutdent');" onMouseUp="buttonMouseUp('buttonOutdent');"><img src="icon_outdent.gif" width="16" height="16" border="0" alt="Decrease Indentation"></span>
		<span unselectable="on" class="toolbarButton" id="buttonIndent" command="Indent" style="left: -34px;" onClick="buttonClick('buttonIndent');this.state=false;" onMouseEnter="buttonMouseEnter('buttonIndent');" onMouseLeave="buttonMouseLeave('buttonIndent');" onMouseDown="buttonMouseDown('buttonIndent');" onMouseUp="buttonMouseUp('buttonIndent');"><img src="icon_indent.gif" width="16" height="16" border="0" alt="Increase Indentation"></span>
		<span unselectable="on" class="toolbarSeperator" style="left: -36px;"></span>
		<span unselectable="on" class="toolbarButton" id="buttonLeft" command="JustifyLeft" style="left: -36px;" onClick="buttonClick('buttonLeft');" onMouseEnter="buttonMouseEnter('buttonLeft');" onMouseLeave="buttonMouseLeave('buttonLeft');" onMouseDown="buttonMouseDown('buttonLeft');" onMouseUp="buttonMouseUp('buttonLeft');"><img src="icon_left.gif" width="16" height="16" border="0" alt="Align Left"></span>
		<span unselectable="on" class="toolbarButton" id="buttonCenter" command="JustifyCenter" style="left: -41px;" onClick="buttonClick('buttonCenter');" onMouseEnter="buttonMouseEnter('buttonCenter');" onMouseLeave="buttonMouseLeave('buttonCenter');" onMouseDown="buttonMouseDown('buttonCenter');" onMouseUp="buttonMouseUp('buttonCenter');"><img src="icon_center.gif" width="16" height="16" border="0" alt="Center"></span>
		<span unselectable="on" class="toolbarButton" id="buttonRight" command="JustifyRight" style="left: -46px;" onClick="buttonClick('buttonRight');" onMouseEnter="buttonMouseEnter('buttonRight');" onMouseLeave="buttonMouseLeave('buttonRight');" onMouseDown="buttonMouseDown('buttonRight');" onMouseUp="buttonMouseUp('buttonRight');"><img src="icon_Right.gif" width="16" height="16" border="0" alt="Align Right"></span>
		<span unselectable="on" class="toolbarButton" id="buttonLCR" command="JustifyFull" style="left: -50px;" onClick="buttonClick('buttonLCR');this.state=false;" onMouseEnter="buttonMouseEnter('buttonLCR');" onMouseLeave="buttonMouseLeave('buttonLCR');" onMouseDown="buttonMouseDown('buttonLCR');" onMouseUp="buttonMouseUp('buttonLCR');"><img src="icon_justify.gif" width="16" height="16" border="0" alt="Justify"></span>
		<span unselectable="on" class="toolbarSeperator" style="left: -48px;"></span>
		<span unselectable="on" class="toolbarButton" id="buttonLink" command="DialogLink" style="left: -48px;" onClick="buttonClick('buttonLink');this.state=false;" onMouseEnter="buttonMouseEnter('buttonLink');" onMouseLeave="buttonMouseLeave('buttonLink');" onMouseDown="buttonMouseDown('buttonLink');" onMouseUp="buttonMouseUp('buttonLink');"><img src="icon_link.gif" width="16" height="16" border="0" alt="Insert Link"></span>
		<span unselectable="on" class="toolbarButton" id="buttonImage" command="DialogImage" style="left: -53px;" onClick="buttonClick('buttonImage');this.state=false;" onMouseEnter="buttonMouseEnter('buttonImage');" onMouseLeave="buttonMouseLeave('buttonImage');" onMouseDown="buttonMouseDown('buttonImage');" onMouseUp="buttonMouseUp('buttonImage');"><img src="icon_image.gif" width="16" height="16" border="0" alt="Insert Image"></span>
		<span unselectable="on" class="toolbarButton" id="buttonTable" command="DialogTable" style="left: -58px;" onClick="buttonClick('buttonTable');this.state=false;" onMouseEnter="buttonMouseEnter('buttonTable');" onMouseLeave="buttonMouseLeave('buttonTable');" onMouseDown="buttonMouseDown('buttonTable');" onMouseUp="buttonMouseUp('buttonTable');"><img src="icon_table.gif" width="16" height="16" border="0" alt="Insert Table"></span>
		<span unselectable="on" class="toolbarSeperator" style="left: -58px;"></span>
		<span unselectable="on" class="toolbarButton" id="buttonCut" command="Cut" style="left: -58px;" onClick="buttonClick('buttonCut');this.state=false;" onMouseEnter="buttonMouseEnter('buttonCut');" onMouseLeave="buttonMouseLeave('buttonCut');" onMouseDown="buttonMouseDown('buttonCut');" onMouseUp="buttonMouseUp('buttonCut');"><img src="icon_cut.gif" width="16" height="16" border="0" alt="Cut"></span>
		<span unselectable="on" class="toolbarButton" id="buttonCopy" command="Copy" style="left: -63px;" onClick="buttonClick('buttonCopy');this.state=false;" onMouseEnter="buttonMouseEnter('buttonCopy');" onMouseLeave="buttonMouseLeave('buttonCopy');" onMouseDown="buttonMouseDown('buttonCopy');" onMouseUp="buttonMouseUp('buttonCopy');"><img src="icon_copy.gif" width="16" height="16" border="0" alt="Copy"></span>
		<span unselectable="on" class="toolbarButton" id="buttonPaste" command="Paste" style="left: -68px;" onClick="buttonClick('buttonPaste');this.state=false;" onMouseEnter="buttonMouseEnter('buttonPaste');" onMouseLeave="buttonMouseLeave('buttonPaste');" onMouseDown="buttonMouseDown('buttonPaste');" onMouseUp="buttonMouseUp('buttonPaste');"><img src="icon_paste.gif" width="16" height="16" border="0" alt="Paste"></span>
		<span unselectable="on" class="toolbarSeperator" style="left: -67px;"></span>
		<span unselectable="on" class="toolbarButton" id="buttonUndo" command="Undo" style="left: -67px;" onClick="buttonClick('buttonUndo');this.state=false;" onMouseEnter="buttonMouseEnter('buttonUndo');" onMouseLeave="buttonMouseLeave('buttonUndo');" onMouseDown="buttonMouseDown('buttonUndo');" onMouseUp="buttonMouseUp('buttonUndo');"><img src="icon_undo.gif" width="16" height="16" border="0" alt="Undo"></span>
		<span unselectable="on" class="toolbarButton" id="buttonRedo" command="Redo" style="left: -72px;" onClick="buttonClick('buttonRedo');this.state=false;" onMouseEnter="buttonMouseEnter('buttonRedo');" onMouseLeave="buttonMouseLeave('buttonRedo');" onMouseDown="buttonMouseDown('buttonRedo');" onMouseUp="buttonMouseUp('buttonRedo');"><img src="icon_redo.gif" width="16" height="16" border="0" alt="Redo"></span>
		<span unselectable="on" class="toolbarSeperator" style="left: -74px;"></span>
		<span unselectable="on" class="toolbarButton" id="buttonRemove" command="RemoveFormat" style="left: -74px;" onClick="buttonClick('buttonRemove');this.state=false" onMouseEnter="buttonMouseEnter('buttonRemove');" onMouseLeave="buttonMouseLeave('buttonRemove');" onMouseDown="buttonMouseDown('buttonRemove');" onMouseUp="buttonMouseUp('buttonRemove');"><img src="icon_rem_formatting.gif" width="16" height="16" border="0" alt="Remove Formatting"></span>
		<span unselectable="on" class="toolbarButton" id="buttonMode" command="Mode" style="left: -74px;" onClick="buttonClick('buttonMode');" onMouseEnter="buttonMouseEnter('buttonMode');" onMouseLeave="buttonMouseLeave('buttonMode');" onMouseDown="buttonMouseDown('buttonMode');" onMouseUp="buttonMouseUp('buttonMode');"><img id="imageMode" src="icon_mode.gif" width="16" height="16" border="0" alt="Source Mode"></span>
		<span unselectable="on" class="toolbarSeperator" style="left: -76px;"></span>
		<span unselectable="on" class="toolbarButton" id="buttonSave" command="Save" style="left: -76px;" onClick="buttonClick('buttonSave');this.state=false;" onMouseEnter="buttonMouseEnter('buttonSave');" onMouseLeave="buttonMouseLeave('buttonSave');" onMouseDown="buttonMouseDown('buttonSave');" onMouseUp="buttonMouseUp('buttonSave');"><img src="icon_save.gif" width="16" height="16" border="0" alt="Save"></span>
		</nobr>
	</div>
	<div class="editDoc" id="theDoc" contentEditable="true" align="left">
	</div>
</div>
</body>
</html>
